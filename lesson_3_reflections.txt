When would you want to use a remote repository rather than keeping all your work
local?

    You could use a remote repository to back up your code, or to work from multiple 
    locations or multiple computers, or to collaborate with other people who
    don't have access to your local copy.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

	If you are collaborating, you may not want to get someone elses
	code yet if you are in the middle of a feature.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

     Fork copies a GitHub repository to another GitHub account.  It 
     would be useful when you don't have permission to change the
     original repository but you want to use it to make something of
     your own.  You typically don't pass changes back to the original repository.
     A clone also copies a repository, but works either
     from GitHub to a local machine, or one local area to another.  It's
     useful for getting a copy onto your local machine to work on. If the 
     original repository is remote, you can push your changes back to it.
     A branch allows you to make larger or experimental changes without 
     altering or holding up the master version. When you are done, you can
     merge back into the master branch.
 
What is the benefit of having a copy of the last known state of the remote
stored locally?

    Fill in your answer here

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
